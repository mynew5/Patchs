Copyright (C) 2013 Emu-Devstore <http://emu-devstore.com/>
Written by Teiby <http://www.teiby.de/>
Version: 1.1
Date: 09/14/2013
Subject: [Info] 1v1arena
Subject: [Type] Function
Subject: [From] http://pastebin.com/LVbK9wpY By BUTTLERKID
Subject: [Work] Unknown
Subject: [BUG] Unknown
Subject: [Code] NO

---

 /dev/null => c/sql/arena1v1/world_v1.0.sql         |   2 +
 .../src/server/game/Battlegrounds/ArenaTeam.cpp    |   3 +
 {a => c}/src/server/game/Battlegrounds/ArenaTeam.h |   3 +-
 .../src/server/game/Battlegrounds/Battleground.cpp |   5 +
 .../src/server/game/Battlegrounds/Battleground.h   |   1 +
 .../server/game/Battlegrounds/BattlegroundMgr.cpp  |  10 +-
 .../game/Entities/Object/Updates/UpdateFields.h    |  24 +-
 .../src/server/game/Miscellaneous/SharedDefines.h  |   1 +
 .../src/server/game/Scripting/ScriptLoader.cpp     |   2 +
 {a => c}/src/server/scripts/Custom/CMakeLists.txt  |   1 +
 .../src/server/scripts/Custom/npc_arena1v1.cpp     | 276 +++++++++++++++++++++
 11 files changed, 314 insertions(+), 14 deletions(-)

diff --git c/sql/arena1v1/world_v1.0.sql c/sql/arena1v1/world_v1.0.sql
new file mode 100644
index 0000000..b9dfc5a
--- /dev/null
+++ c/sql/arena1v1/world_v1.0.sql
@@ -0,0 +1,2 @@
+DELETE FROM `creature_template` WHERE `entry` = 535200;
+INSERT INTO `creature_template` (`entry`, `difficulty_entry_1`, `difficulty_entry_2`, `difficulty_entry_3`, `KillCredit1`, `KillCredit2`, `modelid1`, `modelid2`, `modelid3`, `modelid4`, `name`, `subname`, `IconName`, `gossip_menu_id`, `minlevel`, `maxlevel`, `exp`, `faction_A`, `faction_H`, `npcflag`, `speed_walk`, `speed_run`, `scale`, `rank`, `mindmg`, `maxdmg`, `dmgschool`, `attackpower`, `dmg_multiplier`, `baseattacktime`, `rangeattacktime`, `unit_class`, `unit_flags`, `unit_flags2`, `dynamicflags`, `family`, `trainer_type`, `trainer_spell`, `trainer_class`, `trainer_race`, `minrangedmg`, `maxrangedmg`, `rangedattackpower`, `type`, `type_flags`, `lootid`, `pickpocketloot`, `skinloot`, `resistance1`, `resistance2`, `resistance3`, `resistance4`, `resistance5`, `resistance6`, `spell1`, `spell2`, `spell3`, `spell4`, `spell5`, `spell6`, `spell7`, `spell8`, `PetSpellDataId`, `VehicleId`, `mingold`, `maxgold`, `AIName`, `MovementType`, `InhabitType`, `HoverHeight`, `Health_mod`, `Mana_mod`, `Armor_mod`, `RacialLeader`, `questItem1`, `questItem2`, `questItem3`, `questItem4`, `questItem5`, `questItem6`, `movementId`, `RegenHealth`, `mechanic_immune_mask`, `flags_extra`, `ScriptName`, `WDBVerified`) VALUES (535200, 0, 0, 0, 0, 0, 20291, 0, 0, 0, '1v1 Arena', 'Arena Battlemaster', '', 0, 80, 80, 0, 35, 35, 1, 1, 1.14286, 1, 0, 1, 1, 0, 1, 1, 1000, 0, 1, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '', 0, 3, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 'npc_1v1arena', 1);
diff --git a/src/server/game/Battlegrounds/ArenaTeam.cpp c/src/server/game/Battlegrounds/ArenaTeam.cpp
index a84e7ec..d6c1aac 100644
--- a/src/server/game/Battlegrounds/ArenaTeam.cpp
+++ c/src/server/game/Battlegrounds/ArenaTeam.cpp
@@ -573,6 +573,7 @@ uint8 ArenaTeam::GetSlotByType(uint32 type)
         case ARENA_TEAM_2v2: return 0;
         case ARENA_TEAM_3v3: return 1;
         case ARENA_TEAM_5v5: return 2;
+		case ARENA_TEAM_1v1: return 3;
         default:
             break;
     }
@@ -611,6 +612,8 @@ uint32 ArenaTeam::GetPoints(uint32 memberRating)
         points *= 0.76f;
     else if (Type == ARENA_TEAM_3v3)
         points *= 0.88f;
+	else if (Type == ARENA_TEAM_1v1)
+        points *= 0.64f;
 
     return (uint32) points;
 }
diff --git a/src/server/game/Battlegrounds/ArenaTeam.h c/src/server/game/Battlegrounds/ArenaTeam.h
index 0d37351..ed507c3 100644
--- a/src/server/game/Battlegrounds/ArenaTeam.h
+++ c/src/server/game/Battlegrounds/ArenaTeam.h
@@ -80,6 +80,7 @@ ERR_ARENA_TEAM_LEVEL_TOO_LOW_I
 
 enum ArenaTeamTypes
 {
+	ARENA_TEAM_1v1      = 1,
     ARENA_TEAM_2v2      = 2,
     ARENA_TEAM_3v3      = 3,
     ARENA_TEAM_5v5      = 5
@@ -111,7 +112,7 @@ struct ArenaTeamStats
     uint32 Rank;
 };
 
-#define MAX_ARENA_SLOT 3                                    // 0..2 slots
+#define MAX_ARENA_SLOT 4                                    // 0..3 slots
 
 class ArenaTeam
 {
diff --git a/src/server/game/Battlegrounds/Battleground.cpp c/src/server/game/Battlegrounds/Battleground.cpp
index bd8db17..21f5aea 100644
--- a/src/server/game/Battlegrounds/Battleground.cpp
+++ c/src/server/game/Battlegrounds/Battleground.cpp
@@ -489,6 +489,11 @@ inline void Battleground::_ProcessJoin(uint32 diff)
         // First start warning - 2 or 1 minute
         SendMessageToAll(StartMessageIds[BG_STARTING_EVENT_FIRST], CHAT_MSG_BG_SYSTEM_NEUTRAL);
     }
+
+	// 1v1 Arena - Start arena after 15s, when all players are in arena
+	if(GetArenaType() == ARENA_TYPE_1v1 && GetStartDelayTime() > StartDelayTimes[BG_STARTING_EVENT_THIRD] && (m_PlayersCount[0] + m_PlayersCount[1]) == 2)
+		SetStartDelayTime(StartDelayTimes[BG_STARTING_EVENT_THIRD]);
+
     // After 1 minute or 30 seconds, warning is signaled
     else if (GetStartDelayTime() <= StartDelayTimes[BG_STARTING_EVENT_SECOND] && !(m_Events & BG_STARTING_EVENT_2))
     {
diff --git a/src/server/game/Battlegrounds/Battleground.h c/src/server/game/Battlegrounds/Battleground.h
index 52f86b9..377fdd1 100644
--- a/src/server/game/Battlegrounds/Battleground.h
+++ c/src/server/game/Battlegrounds/Battleground.h
@@ -198,6 +198,7 @@ enum ScoreType
 
 enum ArenaType
 {
+	ARENA_TYPE_1v1          = 1,
     ARENA_TYPE_2v2          = 2,
     ARENA_TYPE_3v3          = 3,
     ARENA_TYPE_5v5          = 5
diff --git a/src/server/game/Battlegrounds/BattlegroundMgr.cpp c/src/server/game/Battlegrounds/BattlegroundMgr.cpp
index efd7e0f..2b31d51 100644
--- a/src/server/game/Battlegrounds/BattlegroundMgr.cpp
+++ c/src/server/game/Battlegrounds/BattlegroundMgr.cpp
@@ -133,7 +133,7 @@ void BattlegroundMgr::Update(uint32 diff)
         {
             // forced update for rated arenas (scan all, but skipped non rated)
             TC_LOG_TRACE(LOG_FILTER_ARENAS, "BattlegroundMgr: UPDATING ARENA QUEUES");
-            for (int qtype = BATTLEGROUND_QUEUE_2v2; qtype <= BATTLEGROUND_QUEUE_5v5; ++qtype)
+            for (int qtype = BATTLEGROUND_QUEUE_2v2; qtype <= BATTLEGROUND_QUEUE_1v1; ++qtype)
                 for (int bracket = BG_BRACKET_ID_FIRST; bracket < MAX_BATTLEGROUND_BRACKETS; ++bracket)
                     m_BattlegroundQueues[qtype].BattlegroundQueueUpdate(diff,
                         BATTLEGROUND_AA, BattlegroundBracketId(bracket),
@@ -606,6 +606,9 @@ Battleground* BattlegroundMgr::CreateNewBattleground(BattlegroundTypeId original
             case ARENA_TYPE_5v5:
                 maxPlayersPerTeam = 5;
                 break;
+			case ARENA_TYPE_1v1:
+                maxPlayersPerTeam = 1;
+                break;
         }
 
         bg->SetMaxPlayersPerTeam(maxPlayersPerTeam);
@@ -956,6 +959,8 @@ BattlegroundQueueTypeId BattlegroundMgr::BGQueueTypeId(BattlegroundTypeId bgType
                     return BATTLEGROUND_QUEUE_3v3;
                 case ARENA_TYPE_5v5:
                     return BATTLEGROUND_QUEUE_5v5;
+				case ARENA_TYPE_1v1:
+                    return BATTLEGROUND_QUEUE_1v1;
                 default:
                     return BATTLEGROUND_QUEUE_NONE;
             }
@@ -985,6 +990,7 @@ BattlegroundTypeId BattlegroundMgr::BGTemplateId(BattlegroundQueueTypeId bgQueue
         case BATTLEGROUND_QUEUE_2v2:
         case BATTLEGROUND_QUEUE_3v3:
         case BATTLEGROUND_QUEUE_5v5:
+		case BATTLEGROUND_QUEUE_1v1:
             return BATTLEGROUND_AA;
         default:
             return BattlegroundTypeId(0);                   // used for unknown template (it existed and do nothing)
@@ -1001,6 +1007,8 @@ uint8 BattlegroundMgr::BGArenaType(BattlegroundQueueTypeId bgQueueTypeId)
             return ARENA_TYPE_3v3;
         case BATTLEGROUND_QUEUE_5v5:
             return ARENA_TYPE_5v5;
+		case BATTLEGROUND_QUEUE_1v1:
+            return ARENA_TYPE_1v1;
         default:
             return 0;
     }
diff --git a/src/server/game/Entities/Object/Updates/UpdateFields.h c/src/server/game/Entities/Object/Updates/UpdateFields.h
index 9e659c0..0ee698e 100644
--- a/src/server/game/Entities/Object/Updates/UpdateFields.h
+++ c/src/server/game/Entities/Object/Updates/UpdateFields.h
@@ -379,18 +379,18 @@ enum EUnitFields
     PLAYER_FIELD_BYTES2                       = UNIT_END + 0x0439, // Size: 1, Type: 6, Flags: PRIVATE
     PLAYER_FIELD_WATCHED_FACTION_INDEX        = UNIT_END + 0x043A, // Size: 1, Type: INT, Flags: PRIVATE
     PLAYER_FIELD_COMBAT_RATING_1              = UNIT_END + 0x043B, // Size: 25, Type: INT, Flags: PRIVATE
-    PLAYER_FIELD_ARENA_TEAM_INFO_1_1          = UNIT_END + 0x0454, // Size: 21, Type: INT, Flags: PRIVATE
-    PLAYER_FIELD_HONOR_CURRENCY               = UNIT_END + 0x0469, // Size: 1, Type: INT, Flags: PRIVATE
-    PLAYER_FIELD_ARENA_CURRENCY               = UNIT_END + 0x046A, // Size: 1, Type: INT, Flags: PRIVATE
-    PLAYER_FIELD_MAX_LEVEL                    = UNIT_END + 0x046B, // Size: 1, Type: INT, Flags: PRIVATE
-    PLAYER_FIELD_DAILY_QUESTS_1               = UNIT_END + 0x046C, // Size: 25, Type: INT, Flags: PRIVATE
-    PLAYER_RUNE_REGEN_1                       = UNIT_END + 0x0485, // Size: 4, Type: FLOAT, Flags: PRIVATE
-    PLAYER_NO_REAGENT_COST_1                  = UNIT_END + 0x0489, // Size: 3, Type: INT, Flags: PRIVATE
-    PLAYER_FIELD_GLYPH_SLOTS_1                = UNIT_END + 0x048C, // Size: 6, Type: INT, Flags: PRIVATE
-    PLAYER_FIELD_GLYPHS_1                     = UNIT_END + 0x0492, // Size: 6, Type: INT, Flags: PRIVATE
-    PLAYER_GLYPHS_ENABLED                     = UNIT_END + 0x0498, // Size: 1, Type: INT, Flags: PRIVATE
-    PLAYER_PET_SPELL_POWER                    = UNIT_END + 0x0499, // Size: 1, Type: INT, Flags: PRIVATE
-    PLAYER_END                                = UNIT_END + 0x049A
+    PLAYER_FIELD_ARENA_TEAM_INFO_1_1          = PLAYER_FIELD_COMBAT_RATING_1 + 25, // Size: 28, Type: INT, Flags: PRIVATE
+    PLAYER_FIELD_HONOR_CURRENCY               = PLAYER_FIELD_ARENA_TEAM_INFO_1_1 + 28, // Size: 1, Type: INT, Flags: PRIVATE
+    PLAYER_FIELD_ARENA_CURRENCY               = PLAYER_FIELD_HONOR_CURRENCY + 1, // Size: 1, Type: INT, Flags: PRIVATE
+    PLAYER_FIELD_MAX_LEVEL                    = PLAYER_FIELD_ARENA_CURRENCY + 1, // Size: 1, Type: INT, Flags: PRIVATE
+    PLAYER_FIELD_DAILY_QUESTS_1               = PLAYER_FIELD_MAX_LEVEL + 1, // Size: 25, Type: INT, Flags: PRIVATE
+    PLAYER_RUNE_REGEN_1                       = PLAYER_FIELD_DAILY_QUESTS_1 + 25, // Size: 4, Type: FLOAT, Flags: PRIVATE
+    PLAYER_NO_REAGENT_COST_1                  = PLAYER_RUNE_REGEN_1 + 4, // Size: 3, Type: INT, Flags: PRIVATE
+    PLAYER_FIELD_GLYPH_SLOTS_1                = PLAYER_NO_REAGENT_COST_1 + 3, // Size: 6, Type: INT, Flags: PRIVATE
+    PLAYER_FIELD_GLYPHS_1                     = PLAYER_FIELD_GLYPH_SLOTS_1 + 6, // Size: 6, Type: INT, Flags: PRIVATE
+    PLAYER_GLYPHS_ENABLED                     = PLAYER_FIELD_GLYPHS_1 + 6, // Size: 1, Type: INT, Flags: PRIVATE
+    PLAYER_PET_SPELL_POWER                    = PLAYER_GLYPHS_ENABLED + 1, // Size: 1, Type: INT, Flags: PRIVATE
+    PLAYER_END                                = PLAYER_PET_SPELL_POWER + 1
 };
 
 enum EGameObjectFields
diff --git a/src/server/game/Miscellaneous/SharedDefines.h c/src/server/game/Miscellaneous/SharedDefines.h
index 4d5245c..3455950 100644
--- a/src/server/game/Miscellaneous/SharedDefines.h
+++ c/src/server/game/Miscellaneous/SharedDefines.h
@@ -3451,6 +3451,7 @@ enum BattlegroundQueueTypeId
     BATTLEGROUND_QUEUE_2v2      = 8,
     BATTLEGROUND_QUEUE_3v3      = 9,
     BATTLEGROUND_QUEUE_5v5      = 10,
+	BATTLEGROUND_QUEUE_1v1      = 11,
     MAX_BATTLEGROUND_QUEUE_TYPES
 };
